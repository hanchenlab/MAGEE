sapply(zeta, function(zz) {
sum(((delta + df) * lambda)/(1 - 2 * zz * lambda) + 2 * (delta *
zz * lambda^2)/(1 - 2 * zz * lambda)^2)
})
}
kpprime0 <- function(zeta) {
sum((2 * (2 * delta + df) * lambda^2)/(1 - 2 * zeta * lambda)^2 + 8 *
delta * zeta * lambda^3/(1 - 2 * zeta * lambda)^3)
}
if (any(lambda < 0)) {
lmin <- max(1/(2 * lambda[lambda < 0])) * 0.99999
}
else if (x > sum((df+delta)*lambda)) {
lmin <- -0.01
}
else {
lmin <- -length(lambda)*max(df+delta)/(2 * x)
}
lmax <- min(1/(2 * lambda[lambda > 0])) * 0.99999
hatzeta <- uniroot(function(zeta) kprime0(zeta) - x, lower = lmin,
upper = lmax, tol = 1e-08)$root
w <- sign(hatzeta) * sqrt(2 * (hatzeta * x - k0(hatzeta)))
v <- hatzeta * sqrt(kpprime0(hatzeta))
if (abs(hatzeta) < 1e-04)
NA
else pnorm(w + log(v/w)/w, lower.tail = FALSE)
}
MAF.weights.beta.fun <- function(freq, beta1, beta2) {
freq[freq > 0.5] <- 1 - freq[freq > 0.5]
ifelse(freq <= 0, 0, dbeta(freq, beta1, beta2))
}
fisher_pval <- function(p) {
is.valid.p <- !is.na(p) & p > 0 & p <= 1
if(sum(is.valid.p) == 0) return(NA)
p <- p[is.valid.p]
pchisq(-2*sum(log(p)), df = 2*length(p), lower.tail = FALSE)
}
weights <- rep(tmp.group.info$weight * MAF.weights.beta.fun(freq, MAF.weights.beta[1], MAF.weights.beta[2]), n.pheno)
MAF.wegihts.beta=c(1,25)
weights <- rep(tmp.group.info$weight * MAF.weights.beta.fun(freq, MAF.weights.beta[1], MAF.weights.beta[2]), n.pheno)
MAF.weights.beta=c(1,25)
weights <- rep(tmp.group.info$weight * MAF.weights.beta.fun(freq, MAF.weights.beta[1], MAF.weights.beta[2]), n.pheno)
n.variants[i] <- n.p
miss.min[i] <- min(miss)
miss.mean[i] <- mean(miss)
miss.max[i] <- max(miss)
freq.min[i] <- min(freq)
freq.mean[i] <- mean(freq)
freq.max[i] <- max(freq)
if(!is.null(strata)) {
freq.strata.min[i] <- min(freq_strata)
freq.strata.max[i] <- max(freq_strata)
}
U <- U*weights
V <- t(V*weights)*weights
if(IV | IF | JV | JF | JD) {
IV.U <- IV.U*rep(weights, ncol(E))
IV.V <- t(IV.V*rep(weights, ncol(E)))*rep(weights, ncol(E))
}
if(MV | JV) MV.pval[i] <- tryCatch(.quad_pval(U = U, V = V, method = method), error = function(e) { NA })
if(IV | JV) IV.pval[i] <- tryCatch(.quad_pval(U = IV.U, V = IV.V, method = method), error = function(e) { NA })
if(JV) JV.pval[i] <- tryCatch(fisher_pval(c(MV.pval[i], IV.pval[i])), error = function(e) { MV.pval[i] })
if(MF | JF | JD) {
MF.BU <- sum(U)
MF.BV <- sum(V)
MF.Bp <- pchisq(MF.BU^2/MF.BV,df=1,lower.tail=FALSE)
V.rowSums <- rowSums(V)
MF.U <- U - V.rowSums * MF.BU / MF.BV
MF.V <- V - tcrossprod(V.rowSums) / MF.BV
if(mean(abs(MF.V)) < sqrt(.Machine$double.eps)) MF.p <- NA
else MF.p <- tryCatch(.quad_pval(U = MF.U, V = MF.V, method = method), error = function(e) { NA })
MF.pval[i] <- tryCatch(fisher_pval(c(MF.Bp, MF.p)), error = function(e) { MF.Bp })
}
if(IF | JF | JD) {
IF.BU <- sum(IV.U)
IF.BV <- sum(IV.V)
IF.Bp <- pchisq(IF.BU^2/IF.BV,df=1,lower.tail=FALSE)
IV.V.rowSums <- rowSums(IV.V)
IF.U <- IV.U - IV.V.rowSums * IF.BU / IF.BV
IF.V <- IV.V - tcrossprod(IV.V.rowSums) / IF.BV
if(mean(abs(IF.V)) < sqrt(.Machine$double.eps)) IF.p <- NA
else IF.p <- tryCatch(.quad_pval(U = IF.U, V = IF.V, method = method), error = function(e) { NA })
IF.pval[i] <- tryCatch(fisher_pval(c(IF.Bp, IF.p)), error = function(e) { IF.Bp })
}
if(JF) JF.pval[i] <- tryCatch(fisher_pval(c(MF.Bp, MF.p, IF.Bp, IF.p)), error = function(e) { MF.Bp })
if(JD) JD.pval[i] <- tryCatch(fisher_pval(c(MF.pval[i], IF.pval[i])), error = function(e) { MF.pval[i] })
rm(geno, K)
if(Garbage.Collection) gc()
i <- 2
tmp.idx <- group.idx.start[i]:group.idx.end[i]
tmp.group.info <- group.info[tmp.idx, , drop = FALSE]
SeqArray::seqSetFilter(gds, variant.id = tmp.group.info$variant.idx, verbose = FALSE)
geno <- if(is.dosage) SeqVarTools::imputedDosage(gds, use.names = FALSE) else SeqVarTools::altDosage(gds, use.names = FALSE)
miss <- colMeans(is.na(geno))
freq <- colMeans(geno, na.rm = TRUE)/2
include <- (miss <= miss.cutoff & ((freq >= MAF.range[1] & freq <= MAF.range[2]) | (freq >= 1-MAF.range[2] & freq <= 1-MAF.range[1])))
if(!is.null(strata)) { # E is not continuous
#freq_strata <- apply(geno,2,function(x) range(tapply(x,strata,mean,na.rm=TRUE)/2))
freq.tmp <- sapply(strata.list, function(x) colMeans(geno[x, , drop = FALSE], na.rm = TRUE)/2)
if (length(dim(freq.tmp)) == 2) freq_strata <- apply(freq.tmp, 1, range) else freq_strata <- as.matrix(range(freq.tmp))
include <- include & !is.na(freq_strata[1,]) & !is.na(freq_strata[2,]) & freq_strata[1,] >= MAF.range[1] & freq_strata[2,] <= 1-MAF.range[1]
rm(freq.tmp)
}
n.p <- sum(include)
if(n.p == 0) next
tmp.group.info <- tmp.group.info[include, , drop = FALSE]
miss <- miss[include]
freq <- freq[include]
geno <- geno[, include, drop = FALSE]
if(!is.null(strata)) freq_strata <- freq_strata[, include, drop = FALSE]
N <- nrow(geno) - colSums(is.na(geno))
if(sum(tmp.group.info$flip) > 0) {
freq[tmp.group.info$flip==1] <- 1 - freq[tmp.group.info$flip==1]
geno[, tmp.group.info$flip==1] <- 2 - geno[, tmp.group.info$flip==1]
if(!is.null(strata)) freq_strata[, tmp.group.info$flip==1] <- 1 - freq_strata[, tmp.group.info$flip==1]
}
if(max(miss)>0) {
miss.idx <- which(is.na(geno))
geno[miss.idx] <- if(missing.method=="impute2mean") 2*freq[ceiling(miss.idx/nrow(geno))] else 0
}
U <- as.vector(crossprod(geno, residuals))
if(IV | IF | JV | JF | JD) {
K <- do.call(cbind, sapply(1:ncol(E), function(xx) geno*E[,xx], simplify = FALSE), envir = environment())
SK <- as.vector(crossprod(K,residuals))
}
if(class(null.obj) == "glmmkin.multi") geno <- Diagonal(n = n.pheno) %x% geno
if(!is.null(null.obj$P)) {
PG <- crossprod(null.obj$P, geno)
} else {
GSigma_iX <- crossprod(geno, null.obj$Sigma_iX)
PG <- crossprod(null.obj$Sigma_i, geno) - tcrossprod(null.obj$Sigma_iX, tcrossprod(GSigma_iX, null.obj$cov))
}
V <- as.matrix(crossprod(geno, PG))
if(IV | IF | JV | JF | JD) {
K <- do.call(cbind, sapply(1:ncol(E), function(xx) geno*E[,xx], simplify = FALSE), envir = environment())
if(!is.null(null.obj$P)) KPK <- crossprod(K,crossprod(null.obj$P,K))
else {
KSigma_iX <- crossprod(K, null.obj$Sigma_iX)
KPK <- crossprod(K, crossprod(null.obj$Sigma_i, K)) - tcrossprod(KSigma_iX, tcrossprod(KSigma_iX, null.obj$cov))
}
V_i <- MASS::ginv(V)
KPG <- crossprod(K,PG)
IV.U <- SK - tcrossprod(tcrossprod(KPG,V_i),t(U))
IV.V <- KPK - tcrossprod(tcrossprod(KPG,V_i),KPG)
}
if(!is.null(meta.file.prefix)) {
COV <-rbind(cbind(V, t(KPG)), cbind(KPG, KPK))
write.table(cbind(tmp.group.info[,c("group","chr","pos","ref","alt")], N, miss, freq, U, matrix(crossprod(K,residuals), nrow = n.p, ncol = n.E)), meta.file.score, quote = FALSE, row.names = FALSE, col.names = FALSE, append = TRUE)
writeBin(COV[lower.tri(COV, diag = TRUE)], meta.file.cov.handle, size = 4)
}
if(use.minor.allele) {
tmp.group.info$weight[freq > 0.5] <- -tmp.group.info$weight[freq > 0.5]
if(!is.null(strata)) freq_strata[, freq > 0.5] <- 1 - freq_strata[, freq > 0.5]
freq[freq > 0.5] <- 1 - freq[freq > 0.5]
}
weights <- rep(tmp.group.info$weight * MAF.weights.beta.fun(freq, MAF.weights.beta[1], MAF.weights.beta[2]), n.pheno)
n.variants[i] <- n.p
miss.min[i] <- min(miss)
miss.mean[i] <- mean(miss)
miss.max[i] <- max(miss)
freq.min[i] <- min(freq)
freq.mean[i] <- mean(freq)
freq.max[i] <- max(freq)
if(!is.null(strata)) {
freq.strata.min[i] <- min(freq_strata)
freq.strata.max[i] <- max(freq_strata)
}
U <- U*weights
V <- t(V*weights)*weights
if(IV | IF | JV | JF | JD) {
IV.U <- IV.U*rep(weights, ncol(E))
IV.V <- t(IV.V*rep(weights, ncol(E)))*rep(weights, ncol(E))
}
if(MV | JV) MV.pval[i] <- tryCatch(.quad_pval(U = U, V = V, method = method), error = function(e) { NA })
if(IV | JV) IV.pval[i] <- tryCatch(.quad_pval(U = IV.U, V = IV.V, method = method), error = function(e) { NA })
if(JV) JV.pval[i] <- tryCatch(fisher_pval(c(MV.pval[i], IV.pval[i])), error = function(e) { MV.pval[i] })
if(MF | JF | JD) {
MF.BU <- sum(U)
MF.BV <- sum(V)
MF.Bp <- pchisq(MF.BU^2/MF.BV,df=1,lower.tail=FALSE)
V.rowSums <- rowSums(V)
MF.U <- U - V.rowSums * MF.BU / MF.BV
MF.V <- V - tcrossprod(V.rowSums) / MF.BV
if(mean(abs(MF.V)) < sqrt(.Machine$double.eps)) MF.p <- NA
else MF.p <- tryCatch(.quad_pval(U = MF.U, V = MF.V, method = method), error = function(e) { NA })
MF.pval[i] <- tryCatch(fisher_pval(c(MF.Bp, MF.p)), error = function(e) { MF.Bp })
}
if(IF | JF | JD) {
IF.BU <- sum(IV.U)
IF.BV <- sum(IV.V)
IF.Bp <- pchisq(IF.BU^2/IF.BV,df=1,lower.tail=FALSE)
IV.V.rowSums <- rowSums(IV.V)
IF.U <- IV.U - IV.V.rowSums * IF.BU / IF.BV
IF.V <- IV.V - tcrossprod(IV.V.rowSums) / IF.BV
if(mean(abs(IF.V)) < sqrt(.Machine$double.eps)) IF.p <- NA
else IF.p <- tryCatch(.quad_pval(U = IF.U, V = IF.V, method = method), error = function(e) { NA })
IF.pval[i] <- tryCatch(fisher_pval(c(IF.Bp, IF.p)), error = function(e) { IF.Bp })
}
if(JF) JF.pval[i] <- tryCatch(fisher_pval(c(MF.Bp, MF.p, IF.Bp, IF.p)), error = function(e) { MF.Bp })
if(JD) JD.pval[i] <- tryCatch(fisher_pval(c(MF.pval[i], IF.pval[i])), error = function(e) { MF.pval[i] })
rm(geno, K)
if(Garbage.Collection) gc()
gds2 <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds2, "sample.id")
variant.id <- SeqArray::seqGetData(gds2, "variant.id")
SeqArray::seqSetFilter(gds2, variant.id=1:45)
SeqArray::seqSetFilter(gds2, sample.id=1:200)
out1 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds2, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
View(out1)
gds2 <- "geno_subset2.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds2, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
View(out2)
source('~/.active-rstudio-document', echo=TRUE)
SeqArray::seqClose(gds2)
SeqArray::seqClose(gds1)
SeqArray::seqClose(gds)
source('~/.active-rstudio-document', echo=TRUE)
SeqArray::seqClose(gds2)
gds2 <- "geno_subset2.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds2, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
gds <- "geno_subset2.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
set.seed(1)
data(example)
attach(example)
model0 <- glmmkin(disease ~ age + sex, data = pheno, kins = GRM,
id = "id", family = binomial(link = "logit"))
infile <- system.file("extdata", "geno.gds", package = "MAGEE")
group.file <- system.file("extdata", "SetID.withweights.txt", package = "MAGEE")
gds2 <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds2, "sample.id")
variant.id <- SeqArray::seqGetData(gds2, "variant.id")
SeqArray::seqSetFilter(gds2, variant.id=1:45)
SeqArray::seqSetFilter(gds2, sample.id=1:200)
out1 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds2, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
View(out1)
gds <- gds2
out1 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
source('~/.active-rstudio-document', echo=TRUE)
SeqArray::seqClose(gds2)
source('~/.active-rstudio-document', echo=TRUE)
gds <- "geno_subset.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
out1 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
SeqArray::seqExport(gds, out.fn = "geno_subset2.gds")
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
gds <- "geno_subset.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
source('~/.active-rstudio-document', echo=TRUE)
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
gds <- "geno_subset.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
gds <- "geno_subset.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
set.seed(1)
data(example)
attach(example)
model0 <- glmmkin(disease ~ age + sex, data = pheno, kins = GRM,
id = "id", family = binomial(link = "logit"))
infile <- system.file("extdata", "geno.gds", package = "MAGEE")
group.file <- system.file("extdata", "SetID.withweights.txt", package = "MAGEE")
infile <- system.file("extdata", "geno.gds", package = "MAGEE")
outfile <- "glmm.gei.testoutfile.txt"
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
out1 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
gds <- "geno_subset.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
all(out1 == out2)
View(out2)
gds <- "geno_subset.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
all(out1 == out2)
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
out1 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
rm(gds)
gds <- "geno_subset.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
all(out1 == out2)
null.obj = model0
interaction = "sex"
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
out1 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
source('~/.active-rstudio-document', echo=TRUE)
SeqArray::seqClose(gds)
library(GMMAT)
library(MAGEE)
set.seed(1)
data(example)
attach(example)
model0 <- glmmkin(disease ~ age + sex, data = pheno, kins = GRM,
id = "id", family = binomial(link = "logit"))
infile <- system.file("extdata", "geno.gds", package = "MAGEE")
group.file <- system.file("extdata", "SetID.withweights.txt", package = "MAGEE")
infile <- system.file("extdata", "geno.gds", package = "MAGEE")
outfile <- "glmm.gei.testoutfile.txt"
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
out1 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
?seqExport
SeqArray::seqClose(gds)
rm(gds)
gds <- "geno_subset.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
all(out1 == out2)
data(example)
attach(example)
model0 <- glmmkin(disease ~ age + sex, data = pheno, kins = GRM,
id = "id", family = binomial(link = "logit"))
infile <- system.file("extdata", "geno.gds", package = "MAGEE")
outfile <- "glmm.gei.testoutfile.txt"
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
glmm.gei(model0, interaction='sex', geno.file = gds, outfile = outfile, ncores = 3)
test1 <- read.delim(outfile)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=1:45)
SeqArray::seqSetFilter(gds, sample.id=1:200)
?seqSetFilter
sample.int(length(variant.id), 5)
SeqArray::seqSetFilter(gds, variant.sel=1:45)
SeqArray::seqSetFilter(gds, sample.sel=1:200)
glmm.gei(model0, interaction='sex', geno.file = gds, outfile = outfile, ncores = 3)
gds <- SeqArray::seqOpen(infile)
SeqArray::seqClose(gds)
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.sel=1:45)
SeqArray::seqSetFilter(gds, sample.sel=1:200)
glmm.gei(model0, interaction='sex', geno.file = gds, outfile = outfile, ncores = 3)
test1 <- read.delim(outfile)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
lenght(1:45)
length(1:45)
SeqArray::seqSetFilter(gds, variant.sel=as.int(1:45))
variant.id
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqClose(gds)
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id
SeqArray::seqClose(gds)
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.sel=variant.id[1:45])
SeqArray::seqSetFilter(gds, sample.sel=sample.id[1:200])
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
source('~/.active-rstudio-document', echo=TRUE)
gds <- "geno_subset.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.id=variant.id[1:45])
SeqArray::seqSetFilter(gds, sample.id=sample.id[1:200])
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
gds <- "geno_subset.gds"
out2 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
glmm.gei(model0, interaction='sex', geno.file = gds, outfile = outfile, ncores = 3)
outfile <- "glmm.gei.testoutfile2.txt"
test2 <- read.delim(outfile)
source('~/.active-rstudio-document', echo=TRUE)
?seqExport
source('~/.active-rstudio-document', echo=TRUE)
library(GMMAT)
library(MAGEE)
data(example)
attach(example)
model0 <- glmmkin(disease ~ age + sex, data = pheno, kins = GRM,
id = "id", family = binomial(link = "logit"))
infile <- system.file("extdata", "geno.gds", package = "MAGEE")
outfile <- "glmm.gei.testoutfile.txt"
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.sel=variant.id[1:45])
SeqArray::seqSetFilter(gds, sample.sel=sample.id[1:200])
glmm.gei(model0, interaction='sex', geno.file = gds, outfile = outfile, ncores = 3)
test1 <- read.delim(outfile)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
library(GMMAT)
library(MAGEE)
data(example)
attach(example)
model0 <- glmmkin(disease ~ age + sex, data = pheno, kins = GRM,
id = "id", family = binomial(link = "logit"))
infile <- system.file("extdata", "geno.gds", package = "MAGEE")
outfile <- "glmm.gei.testoutfile.txt"
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.sel=variant.id[1:45])
SeqArray::seqSetFilter(gds, sample.sel=sample.id[1:200])
glmm.gei(model0, interaction='sex', geno.file = gds, outfile = outfile, ncores = 3)
test1 <- read.delim(outfile)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
gds <- "geno_subset.gds"
outfile <- "glmm.gei.testoutfile2.txt"
glmm.gei(model0, interaction='sex', geno.file = gds, outfile = outfile, ncores = 3)
test2 <- read.delim(outfile)
all(test1 == test2)
rm(list = ls()[!grepl("test",ls())])
set.seed(1)
data(example)
attach(example)
model0 <- glmmkin(disease ~ age + sex, data = pheno, kins = GRM,
id = "id", family = binomial(link = "logit"))
infile <- system.file("extdata", "geno.gds", package = "MAGEE")
group.file <- system.file("extdata", "SetID.withweights.txt", package = "MAGEE")
gds <- SeqArray::seqOpen(infile)
sample.id <- SeqArray::seqGetData(gds, "sample.id")
variant.id <- SeqArray::seqGetData(gds, "variant.id")
SeqArray::seqSetFilter(gds, variant.sel=variant.id[1:45])
SeqArray::seqSetFilter(gds, sample.sel=sample.id[1:200])
out1 <- MAGEE(null.obj = model0, interaction='sex', geno.file = gds, group.file, group.file.sep = "\t",
tests=c("JV", "JF", "JD"), ncores = 1)
SeqArray::seqExport(gds, out.fn = "geno_subset.gds")
SeqArray::seqClose(gds)
gds <- SeqArray::seqOpen(infile)
gds2 <- gds
gds <- SeqArray::seqClose(gds)
sample.id <- SeqArray::seqGetData(gds2, "sample.id")
